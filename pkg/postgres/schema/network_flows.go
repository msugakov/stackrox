// Code generated by pg-bindings generator. DO NOT EDIT.

package schema

import (
	"reflect"

	v1 "github.com/stackrox/rox/generated/api/v1"
	"github.com/stackrox/rox/generated/storage"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
	"github.com/stackrox/rox/pkg/search"
)

var (
	// CreateTableNetworkFlowsStmt holds the create statement for table `network_flows`.
	CreateTableNetworkFlowsStmt = &postgres.CreateStmts{
		Table: `
               create table if not exists network_flows (
                   Props_SrcEntity_Id varchar,
                   Props_SrcEntity_ExternalSource_Default bool,
                   Props_DstEntity_Id varchar,
                   Props_DstEntity_ExternalSource_Default bool,
                   Props_DstPort integer,
                   Props_L4Protocol integer,
                   ClusterId varchar,
                   serialized bytea,
                   PRIMARY KEY(Props_SrcEntity_Id, Props_DstEntity_Id, Props_DstPort, Props_L4Protocol, ClusterId)
               )
               `,
		GormModel: (*NetworkFlows)(nil),
		Indexes:   []string{},
		Children:  []*postgres.CreateStmts{},
	}

	// NetworkFlowsSchema is the go schema for table `network_flows`.
	NetworkFlowsSchema = func() *walker.Schema {
		schema := GetSchemaForTable("network_flows")
		if schema != nil {
			return schema
		}
		schema = walker.Walk(reflect.TypeOf((*storage.NetworkFlow)(nil)), "network_flows")
		schema.SetOptionsMap(search.Walk(v1.SearchCategory_NETWORK_BASELINE, "networkflow", (*storage.NetworkFlow)(nil)))
		RegisterTable(schema, CreateTableNetworkFlowsStmt)
		return schema
	}()
)

const (
	NetworkFlowsTableName = "network_flows"
)

// NetworkFlows holds the Gorm model for Postgres table `network_flows`.
type NetworkFlows struct {
	PropsSrcEntityId                    string             `gorm:"column:props_srcentity_id;type:varchar;primaryKey"`
	PropsSrcEntityExternalSourceDefault bool               `gorm:"column:props_srcentity_externalsource_default;type:bool"`
	PropsDstEntityId                    string             `gorm:"column:props_dstentity_id;type:varchar;primaryKey"`
	PropsDstEntityExternalSourceDefault bool               `gorm:"column:props_dstentity_externalsource_default;type:bool"`
	PropsDstPort                        uint32             `gorm:"column:props_dstport;type:integer;primaryKey"`
	PropsL4Protocol                     storage.L4Protocol `gorm:"column:props_l4protocol;type:integer;primaryKey"`
	ClusterId                           string             `gorm:"column:clusterid;type:varchar;primaryKey"`
	Serialized                          []byte             `gorm:"column:serialized;type:bytea"`
}
