---
apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: stackrox
  annotations:
    # The event we are targeting as seen from the webhook payload
    # this can be an array too, i.e: [pull_request, push]
    pipelinesascode.tekton.dev/on-event: "[pull_request, push]"

    # The branch or tag we are targeting (ie: main, refs/tags/*)
    pipelinesascode.tekton.dev/on-target-branch: "[refs/heads/*]"

    # Task for Golang
    pipelinesascode.tekton.dev/task-1: "[golangci-lint]"

    # You can add more tasks in here to reuse, browse the one you like from here
    # https://hub.tekton.dev/
    # example:
    # pipelinesascode.tekton.dev/task-2: "[maven, buildah]"

    # How many runs we want to keep attached to this event
    pipelinesascode.tekton.dev/max-keep-runs: "5"
spec:
  params:
    # The variable with brackets are special to Pipelines as Code
    # They will automatically be expanded with the events from Github.
    - name: repo_url
      value: "{{ repo_url }}"
    - name: revision
      value: "{{ revision }}"
  pipelineSpec:
    params:
      - name: repo_url
      - name: revision
    workspaces:
      - name: source
#      - name: basic-auth
    tasks:
      - name: fetch-repository
        taskSpec:
          workspaces:
          - name: output
          params:
          - name: subdirectory
          - name: url
          - name: revision
          steps:
          - name: do-the-git-clone-damn-you
            image: quay.io/stackrox-io/apollo-ci:stackrox-build-0.3.46
            script: |
              rm -rf $(workspaces.output.path)/$(params.subdirectory)
              mkdir -p $(workspaces.output.path)/$(params.subdirectory)
              git clone $(params.url) $(workspaces.output.path)/$(params.subdirectory)
#        taskRef:
#          name: git-clone
        workspaces:
          - name: output
            workspace: source
#          - name: basic-auth
#            workspace: basic-auth
        params:
          - name: url
            value: $(params.repo_url)
          - name: revision
            value: $(params.revision)
          - name: subdirectory
            value: stackrox-src
      - name: golangci-lint
        taskRef:
          name: golangci-lint
        runAfter:
          - fetch-repository
        params:
          - name: package
            value: stackrox-src/.
        workspaces:
          - name: source
            workspace: source

  workspaces:
    - name: source
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
#    # This workspace will inject secret to help the git-clone task to be able to
#    # checkout the private repositories
#    - name: basic-auth
#      secret:
#        secretName: "{{ git_auth_secret }}"
